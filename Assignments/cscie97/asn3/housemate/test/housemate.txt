console CONTROLLER MAIN TESTS

console ***********************
console ***********************
console MODEL SETUP
console ***********************
console ***********************

console CREATE HOUSE AND LIVING ROOM
define house House1 address 115_Hamlet_St floors 2 silent
define room LivingRoom house House1 floor 1 window_count 1 silent
define room Kitchen house House1 floor 1 window_count 2 silent

console CREATE OCCUPANT
define occupant JeremyClark name JeremyClark type Adult silent
add occupant JeremyClark house House1 silent

console CONFIGURE THERMOSTAT
define appliance Thermostat type thermostat room House1:LivingRoom silent
define measure room_temp type Float silent
define setting target_temp type Float silent
add feature Measure:room_temp device House1:LivingRoom:Thermostat silent
add feature Setting:target_temp device House1:LivingRoom:Thermostat silent
set appliance House1:LivingRoom:Thermostat status Measure:room_temp value 60 silent
set appliance House1:LivingRoom:Thermostat status Setting:target_temp value 60 silent

console CONFIGURE LIVING ROOM AVA
define appliance Ava type smartspeaker room House1:LivingRoom silent
define measure voice_command type String silent
define setting text_to_speech type String silent
add feature Measure:voice_command device House1:LivingRoom:Ava silent
add feature Setting:text_to_speech device House1:LivingRoom:Ava silent

console CONFIGURE LIVING ROOM CAMERA
define appliance Camera type camera room House1:LivingRoom silent
define measure occupant_leaving type String silent
define measure occupant_arriving type String silent
define measure occupant_count type Integer silent
define measure occupant_inactive type String silent
define measure occupant_active type String silent
add feature Measure:occupant_leaving device House1:LivingRoom:Camera silent
add feature Measure:occupant_arriving device House1:LivingRoom:Camera silent
add feature Measure:occupant_count device House1:LivingRoom:Camera silent
add feature Measure:occupant_inactive device House1:LivingRoom:Camera silent
add feature Measure:occupant_active device House1:LivingRoom:Camera silent
set appliance House1:LivingRoom:Camera status Measure:occupant_count value 1 silent

console CONFIGURE SMOKE DETECTOR
define sensor SmokeDetector type smokedetector room House1:LivingRoom silent
define measure smoke_level type Float silent
add feature Measure:smoke_level device House1:LivingRoom:SmokeDetector silent
set appliance House1:LivingRoom:SmokeDetector status Measure:smoke_level value 0 silent

console CONFIGURE EMERGENCY PHONE
define appliance EmergencyPhone type phone room House1:LivingRoom silent
define setting target_number type Integer silent
define setting call_mode type HANGUP|CALL silent
add feature Setting:target_number device House1:LivingRoom:EmergencyPhone silent
add feature Setting:call_mode device House1:LivingRoom:EmergencyPhone silent
set appliance House1:LivingRoom:EmergencyPhone status Setting:target_number value 911 silent
set appliance House1:LivingRoom:EmergencyPhone status Setting:call_mode value HANGUP silent

console CONFIGURE SMART DOOR
define appliance Door type door room House1:LivingRoom silent
define setting door_state type OPEN|CLOSED silent
add feature Setting:door_state device House1:LivingRoom:Door silent
set appliance House1:LivingRoom:Door status Setting:door_state value CLOSED silent

console CONFIGURE LIVING ROOM LIGHTS
define appliance MainLights type lights room House1:LivingRoom silent
define appliance Sconces type lights room House1:LivingRoom silent
define setting Light_Power type ON|OFF silent
define setting Lumens type Integer silent
add feature Setting:Light_Power device House1:LivingRoom:MainLights silent
add feature Setting:Light_Power device House1:LivingRoom:Sconces silent
add feature Setting:Lumens device House1:LivingRoom:MainLights silent
add feature Setting:Lumens device House1:LivingRoom:Sconces silent
console INIT LIGHTS TO OFF
set appliance House1:LivingRoom:MainLights status Setting:Light_Power value OFF silent
set appliance House1:LivingRoom:Sconces status Setting:Light_Power value OFF silent
console INIT LIGHTS TO 400 LUMENS (WILL HAVE NO EFFECT SINCE LIGHTS ARE OFF)
set appliance House1:LivingRoom:MainLights status Setting:Lumens value 400 silent
set appliance House1:LivingRoom:Sconces status Setting:Lumens value 400 silent

console CONFIGURE LIVING ROOM WINDOWS
define appliance FrontWindow type window room House1:LivingRoom silent
define appliance SideWindow type window room House1:LivingRoom silent
define appliance RearWindow type window room House1:LivingRoom silent
define setting Window_Position type OPEN|CLOSED|HALF silent
add feature Setting:Window_Position device House1:LivingRoom:FrontWindow silent
add feature Setting:Window_Position device House1:LivingRoom:SideWindow silent
add feature Setting:Window_Position device House1:LivingRoom:RearWindow silent
console INIT WINDOW_POSITION TO CLOSED
set appliance House1:LivingRoom:FrontWindow status Setting:Window_Position value CLOSED silent
set appliance House1:LivingRoom:SideWindow status Setting:Window_Position value CLOSED silent
set appliance House1:LivingRoom:RearWindow status Setting:Window_Position value CLOSED silent

configure OVEN AND KITCHEN AVA
define appliance AvaKitchen type smartspeaker room House1:Kitchen silent
add feature Measure:voice_command device House1:Kitchen:AvaKitchen silent
add feature Setting:text_to_speech device House1:Kitchen:AvaKitchen silent
define appliance Oven type oven room House1:Kitchen silent
define setting timer_mode type START|STOP silent
define setting timer_start_value type Integer silent
define measure timer_value type Integer silent
define measure current_temp type Integer silent
add feature Setting:timer_mode device House1:Kitchen:Oven silent
add feature Setting:timer_start_value device House1:Kitchen:Oven silent
add feature Measure:timer_value device House1:Kitchen:Oven silent
add feature Setting:target_temp device House1:Kitchen:Oven silent
add feature Measure:current_temp device House1:Kitchen:Oven silent
set appliance House1:Kitchen:Oven status Setting:timer_mode value START silent
set appliance House1:Kitchen:Oven status Setting:timer_start_value value 120 silent
set appliance House1:Kitchen:Oven status Measure:timer_value value 10 silent
set appliance House1:Kitchen:Oven status Setting:target_temp value 350 silent
set appliance House1:Kitchen:Oven status Measure:current_temp value 350 silent

configure REFIGERATOR
define appliance Refrigerator type Refrigerator room House1:Kitchen silent
define measure beer_count type Integer silent
define setting beer_count_reminder type Integer silent
define setting need_beer type YES|NO silent
add feature Measure:beer_count device House1:Kitchen:Refrigerator silent
add feature Setting:beer_count_reminder device House1:Kitchen:Refrigerator silent
add feature Setting:need_beer device House1:Kitchen:Refrigerator silent
set appliance House1:Kitchen:Refrigerator status Measure:beer_count value 10 silent
set appliance House1:Kitchen:Refrigerator status Setting:beer_count_reminder value 3 silent
set appliance House1:Kitchen:Refrigerator status Setting:need_beer value NO silent



console ***********************
console ***********************
console RULES AND COMMANDS
console ***********************
console ***********************

console CREATE CONTEXTS
create context name House1Context type house fqn House1
create context name AllContext type all fqn all


console ===================
console DIRECT COMMAND OPEN DOOR
console ===================

console CREATE RULE TO OPEN LR DOOR
create feature_update_command name OpenLivingRoomDoor instructions var r = {'targetDeviceScope':'House1:LivingRoom:Door', 'targetDeviceStateFqn':'Setting:door_state', 'targetValue':'OPEN'};r;
create rule_predicate name AvaVoiceCommandIsDoorOpen test var r = (context['House1:LivingRoom:Ava:Measure:voice_command'].is_detecting == 'Open_Door'); r;
create rule LivingRoomOpenDoorRule
add context House1Context rule LivingRoomOpenDoorRule
add predicate AvaVoiceCommandIsDoorOpen rule LivingRoomOpenDoorRule
add command OpenLivingRoomDoor rule LivingRoomOpenDoorRule

subscribe feature House1:LivingRoom:Ava:Measure:voice_command rule LivingRoomOpenDoorRule

console DETECT VOICE COMMAND OPEN_DOOR
set appliance House1:LivingRoom:Ava status Measure:voice_command value Open_Door

console CHECK RESULTS
show appliance House1:LivingRoom:Door status Setting:door_state


console ===================
console DIRECT COMMAND CLOSE DOOR
console ===================

console CREATE RULE TO CLOSE LR DOOR
create feature_update_command name CloseLivingRoomDoor instructions var r = {'targetDeviceScope':'House1:LivingRoom:Door', 'targetDeviceStateFqn':'Setting:door_state', 'targetValue':'CLOSED'};r;
create rule_predicate name AvaVoiceCommandDoorClose test var r = (context['House1:LivingRoom:Ava:Measure:voice_command'].is_detecting == 'Close_Door'); r;
create rule LivingRoomCloseDoorRule
add context House1Context rule LivingRoomCloseDoorRule
add predicate AvaVoiceCommandDoorClose rule LivingRoomCloseDoorRule
add command CloseLivingRoomDoor rule LivingRoomCloseDoorRule

subscribe feature House1:LivingRoom:Ava:Measure:voice_command rule LivingRoomCloseDoorRule

console DETECT VOICE COMMAND CLOSE_DOOR
set appliance House1:LivingRoom:Ava status Measure:voice_command value Close_Door

console CHECK RESULTS
show appliance House1:LivingRoom:Door status Setting:door_state



console ===================
console DIRECT COMMAND LIGHTS ON
console ===================

console CREATE RULE TO TURN ALL LR LIGHTS ON
create feature_update_command name TurnAllLivingRoomLightsOn instructions var r = {'targetDeviceScope':'House1:LivingRoom:', 'targetDeviceStateFqn':'Setting:Light_Power', 'targetValue':'ON'};r;
create rule_predicate name AvaVoiceCommandLightsOn test var r = (context['House1:LivingRoom:Ava:Measure:voice_command'].is_detecting == 'Lights_On'); r;
create rule LivingRoomLightsOn
add context House1Context rule LivingRoomLightsOn
add predicate AvaVoiceCommandLightsOn rule LivingRoomLightsOn
add command TurnAllLivingRoomLightsOn rule LivingRoomLightsOn

subscribe feature House1:LivingRoom:Ava:Measure:voice_command rule LivingRoomLightsOn

console DETECT VOICE COMMAND LIGHTS_ON
set appliance House1:LivingRoom:Ava status Measure:voice_command value Lights_On

console CHECK RESULTS
show appliance House1:LivingRoom:MainLights status Setting:Light_Power
show appliance House1:LivingRoom:Sconces status Setting:Light_Power



console ===================
console DIRECT COMMAND LIGHTS OFF
console ===================

console CREATE RULE TO TURN ALL LR LIGHTS OFF
create feature_update_command name TurnAllLivingRoomLightsOff instructions var r = {'targetDeviceScope':'House1:LivingRoom:', 'targetDeviceStateFqn':'Setting:Light_Power', 'targetValue':'OFF'};r;
create rule_predicate name AvaVoiceCommandLightsOff test var r = (context['House1:LivingRoom:Ava:Measure:voice_command'].is_detecting == 'Lights_Off'); r;
create rule LivingRoomLightsOff
add context House1Context rule LivingRoomLightsOff
add predicate AvaVoiceCommandLightsOff rule LivingRoomLightsOff
add command TurnAllLivingRoomLightsOff rule LivingRoomLightsOff

subscribe feature House1:LivingRoom:Ava:Measure:voice_command rule LivingRoomLightsOff

console DETECT VOICE COMMAND LIGHTS_OFF
set appliance House1:LivingRoom:Ava status Measure:voice_command value Lights_Off

console CHECK RESULTS
show appliance House1:LivingRoom:MainLights status Setting:Light_Power
show appliance House1:LivingRoom:Sconces status Setting:Light_Power



console ===================
console GENERIC VOICE COMMAND OCCUPANT
console ===================

console CREATE RULE TO INTERPRET GENERIC AVA ROOM-WIDE VOICE COMMAND
create feature_update_command name PerformGenericVoiceCommand instructions var notifyingObjectFqn = context['notifyingObject'].fqn;var r = {'targetDeviceScope':notifyingObjectFqn.split(":", 2).join(":", 2), 'targetDeviceStateFqn':'Setting:'+context[notifyingObjectFqn].is_detecting.split("_to_")[0], 'targetValue':context[notifyingObjectFqn].is_detecting.split("_to_")[1]};r;
create rule_predicate name IsAvaGenericVoiceCommand test var r = context[context['notifyingObject'].fqn].is_detecting.indexOf("_to_")!==-1; r;
create rule GenericVoiceCommand
add context House1Context rule GenericVoiceCommand
add predicate IsAvaGenericVoiceCommand rule GenericVoiceCommand
add command PerformGenericVoiceCommand rule GenericVoiceCommand

subscribe feature House1:LivingRoom:Ava:Measure:voice_command rule GenericVoiceCommand

console DETECT GENERIC VOICE COMMAND LIGHTS_ON
set appliance House1:LivingRoom:Ava status Measure:voice_command value Light_Power_to_ON

console CHECK RESULTS
show appliance House1:LivingRoom:MainLights status Setting:Light_Power
show appliance House1:LivingRoom:Sconces status Setting:Light_Power



console ===================
console FIND OCCUPANT
console ===================

console CREATE RULE TO LOCATE OCCUPANT
create feature_update_command name LocateOccupantResponse instructions var targetDevice = context['notifyingObject'].fqn.split(':',3).join(':',3);var targetOccupant=context[context['notifyingObject'].fqn].is_detecting.split('Where_is_')[1];var targetOccupantFqn='Occupant:' + targetOccupant;var occupantLocation = context['Occupant:'+targetOccupant].is_in_room;var r = {'targetDeviceScope':targetDevice, 'targetDeviceStateFqn':'Setting:text_to_speech', 'targetValue':targetOccupant + '_is_in_room_' + occupantLocation};r;
create rule_predicate name IsAvaLocateOccupantRequest test var r = context[context['notifyingObject'].fqn].is_detecting.indexOf("Where_is_")==0; r;
create rule LocateOccupant
add context AllContext rule LocateOccupant
add predicate IsAvaLocateOccupantRequest rule LocateOccupant
add command LocateOccupantResponse rule LocateOccupant

subscribe feature House1:LivingRoom:Ava:Measure:voice_command rule LocateOccupant

console DETECT OCCUPANT LOCATION
set appliance House1:LivingRoom:Ava status Measure:voice_command value Where_is_JeremyClark

console CHECK RESULTS
show appliance House1:LivingRoom:Ava status Setting:text_to_speech



console ===================
console ARRIVING OCCUPANT
console ===================

console CREATE RULE FOR OCCUPANT ARRIVING IN ROOM
create move_occupant_command name AddOccupantToRoom instructions var targetRoom = context['notifyingObject'].fqn.split(':',2).join(':',2);var arrivingOccupant=context[context['notifyingObject'].fqn].is_detecting;var r = {'occupantId':arrivingOccupant, 'roomFqn':targetRoom};r;
create rule OccupantEnteringRoom
add context AllContext rule OccupantEnteringRoom
add command AddOccupantToRoom rule OccupantEnteringRoom

subscribe feature House1:LivingRoom:Camera:Measure:occupant_arriving rule OccupantEnteringRoom

console CREATE RULE FOR NON-EMPTY OCCUPANCY
create feature_update_command name SetThermostatTo70 instructions var targetThermostat = context['notifyingObject'].fqn.split(':',2).join(':',2) + ":Thermostat";var r = {'targetDeviceScope':targetThermostat, 'targetDeviceStateFqn':'Setting:target_temp', 'targetValue':70.0};r;
create rule_predicate name IsRoomOccupied test (context[context['notifyingObject'].fqn].is_detecting !== 0);
create rule RoomIsOccupied
add predicate IsRoomOccupied rule RoomIsOccupied
add context AllContext rule RoomIsOccupied
add command SetThermostatTo70 rule RoomIsOccupied
add command TurnAllLivingRoomLightsOn rule RoomIsOccupied

subscribe feature House1:LivingRoom:Camera:Measure:occupant_count rule RoomIsOccupied

console CONFIRM JEREMYCLARK NOT IN LIVING ROOM
show configuration occupant Occupant:JeremyClark

console DETECT OCCUPANT ARRIVING
set appliance House1:LivingRoom:Camera status Measure:occupant_arriving value JeremyClark

console CONFIRM JEREMYCLARK IS IN LIVING ROOM
show configuration occupant Occupant:JeremyClark

console PROCESS NON_EMPTY ROOM
console CHECK CONFIRM THERMOSTAT SET TO 60 AND LIGHTS OFF
set appliance House1:LivingRoom:Ava status Measure:voice_command value Light_Power_to_OFF
show appliance House1:LivingRoom:Thermostat status Setting:target_temp
show appliance House1:LivingRoom:MainLights status Setting:Light_Power
show appliance House1:LivingRoom:Sconces status Setting:Light_Power

console DETECT CHANGE IN OCCUPANT_COUNT TO 1
set appliance House1:LivingRoom:Camera status Measure:occupant_count value 1

console CHECK CONFIRM THERMOSTAT SET TO 70 AND LIGHTS ON
show appliance House1:LivingRoom:Thermostat status Setting:target_temp
show appliance House1:LivingRoom:MainLights status Setting:Light_Power
show appliance House1:LivingRoom:Sconces status Setting:Light_Power



console ===================
console PROCESS LEAVING OCCUPANT
console ===================

console CREATE RULE FOR OCCUPANT LEAVING ROOM
create move_occupant_command name MoveOccupantOutOfRoom instructions var departingOccupant=context[context['notifyingObject'].fqn].is_detecting;var r = {'occupantId':departingOccupant, 'roomFqn':'null'};r;
create rule OccupantLeavingRoom
add context AllContext rule OccupantLeavingRoom
add command MoveOccupantOutOfRoom rule OccupantLeavingRoom

subscribe feature House1:LivingRoom:Camera:Measure:occupant_leaving rule OccupantLeavingRoom

console CREATE RULE FOR EMPTY OCCUPANCY
create feature_update_command name DecreaseThermostatTo60 instructions var targetThermostat = context['notifyingObject'].fqn.split(':',2).join(':',2) + ":Thermostat";var r = {'targetDeviceScope':targetThermostat, 'targetDeviceStateFqn':'Setting:target_temp', 'targetValue':60.0};r;
create rule_predicate name IsRoomEmpty test (context[context['notifyingObject'].fqn].is_detecting == 0);
create rule RoomIsUnoccupied
add predicate IsRoomEmpty rule RoomIsUnoccupied
add context AllContext rule RoomIsUnoccupied
add command DecreaseThermostatTo60 rule RoomIsUnoccupied
add command TurnAllLivingRoomLightsOff rule RoomIsUnoccupied

subscribe feature House1:LivingRoom:Camera:Measure:occupant_count rule RoomIsUnoccupied

console CONFIRM JEREMYCLARK IN LIVING ROOM
show configuration occupant Occupant:JeremyClark

console DETECT OCCUPANT LEAVING
set appliance House1:LivingRoom:Camera status Measure:occupant_leaving value JeremyClark

console CONFIRM JEREMYCLARK NO LONGER IN LIVING ROOM
show configuration occupant Occupant:JeremyClark

console PROCESS EMPTY ROOM
console CHECK CONFIRM THERMOSTAT SET TO 70 AND LIGHTS ON
show appliance House1:LivingRoom:Thermostat status Setting:target_temp
show appliance House1:LivingRoom:MainLights status Setting:Light_Power
show appliance House1:LivingRoom:Sconces status Setting:Light_Power

console DETECT EMPTY ROOM
set appliance House1:LivingRoom:Camera status Measure:occupant_count value 0

console CHECK CONFIRM THERMOSTAT SET TO 60 AND LIGHTS ON
show appliance House1:LivingRoom:Thermostat status Setting:target_temp
show appliance House1:LivingRoom:MainLights status Setting:Light_Power
show appliance House1:LivingRoom:Sconces status Setting:Light_Power




console ===================
console SINGLE OCCUPANT INACTIVE
console ===================

console CREATE OCCUPANT INACTIVE RULE
create set_occupant_activity_command name SetOccupantInactive instructions var targetOccupant = context[context['notifyingObject'].fqn].is_detecting;var r = {'occupantId':targetOccupant, 'activityState':'false'};r;
create rule OccupantInactive
add context AllContext rule OccupantInactive
add command SetOccupantInactive rule OccupantInactive

subscribe feature House1:LivingRoom:Camera:Measure:occupant_inactive rule OccupantInactive

console CREATE SINGLE OCCUPANT INACTIVE RULE
create feature_update_command name SetLumensTo100 instructions var targetRoom = context['notifyingObject'].fqn.split(':',2).join(':',2);var r = {'targetDeviceScope':targetRoom, 'targetDeviceStateFqn':'Setting:Lumens', 'targetValue':100};r;
create rule_predicate name IsOccupancyCount1 test var targetRoom = context['notifyingObject'].fqn.split(':',2).join(':',2);print(targetRoom);(context[targetRoom].has_occupant_count == 1);
create rule SingleOccupantInactive
add predicate IsOccupancyCount1 rule SingleOccupantInactive
add context AllContext rule SingleOccupantInactive
add command SetLumensTo100 rule SingleOccupantInactive

subscribe feature House1:LivingRoom:Camera:Measure:occupant_inactive rule SingleOccupantInactive

console MOVE JEREMYCLARK BACK INTO LIVING ROOM
set appliance House1:LivingRoom:Camera status Measure:occupant_count value 1
set appliance House1:LivingRoom:Camera status Measure:occupant_arriving value JeremyClark

console CHECK CONFIRM THAT LUMENS ARE SET TO 400
show appliance House1:LivingRoom:MainLights status Setting:Lumens
show appliance House1:LivingRoom:Sconces status Setting:Lumens

console CONFIRM JEREMYCLARK IS ACTIVE
show configuration occupant Occupant:JeremyClark

console CHECK CONFIRM THAT ROOM OCCUPANCY IS 1
show configuration room House1:LivingRoom

console DETECT INACTIVE OCCUPANT
set appliance House1:LivingRoom:Camera status Measure:occupant_inactive value JeremyClark

console CHECK CONFIRM LUMENS SET TO 100 (DIM)
show appliance House1:LivingRoom:MainLights status Setting:Lumens
show appliance House1:LivingRoom:Sconces status Setting:Lumens

console CHECK JEREMYCLARK IS INACTIVE
show configuration occupant Occupant:JeremyClark


console ===================
console SET OCCUPANT ACTIVE
console ===================

console CREATE OCCUPANT ACTIVE RULE
create set_occupant_activity_command name SetOccupantActive instructions var targetOccupant = context[context['notifyingObject'].fqn].is_detecting;var r = {'occupantId':targetOccupant, 'activityState':'true'};r;
create rule OccupantActive
add context AllContext rule OccupantActive
add command SetOccupantActive rule OccupantActive

subscribe feature House1:LivingRoom:Camera:Measure:occupant_active rule OccupantActive

console DETECT ACTIVE OCCUPANT
set appliance House1:LivingRoom:Camera status Measure:occupant_active value JeremyClark

console CHECK JEREMYCLARK IS NOW ACTIVE
show configuration occupant Occupant:JeremyClark




console ===================
console DANGEROUS SMOKE LEVEL (FIRE) DETECTED - OCCUPANTS IN HOUSE
console ===================

console CREATE DANGEROUS SMOKE LEVEL (FIRE) RULE
create feature_update_command name BroadcastFireWarning instructions var r = {'targetDeviceScope':'House1', 'targetDeviceStateFqn':'Setting:text_to_speech', 'targetValue':'Dangerous_Smoke_Level_Detected._Evacuate!'};r;
create feature_update_command name TurnAllLightsOnInHouse instructions var r = {'targetDeviceScope':'House1', 'targetDeviceStateFqn':'Setting:Light_Power', 'targetValue':'ON'};r;
create feature_update_command name IssueEmergencyPhoneCall instructions var r = {'targetDeviceScope':'House1:LivingRoom:EmergencyPhone', 'targetDeviceStateFqn':'Setting:call_mode', 'targetValue':'CALL'};r;
create rule_predicate name IsHouseOccupied test var targetRoom = context['notifyingObject'].fqn.split(':',2).join(':',2);(context[targetRoom].has_occupant_count > 0);
create rule_predicate name IsSmokeLevelOver100 test (context[context['notifyingObject'].fqn].is_detecting > 100);
create rule DangerousSmokeLevel
add predicate IsHouseOccupied rule DangerousSmokeLevel
add predicate IsSmokeLevelOver100 rule DangerousSmokeLevel
add context AllContext rule DangerousSmokeLevel
add command BroadcastFireWarning rule DangerousSmokeLevel
add command TurnAllLightsOnInHouse rule DangerousSmokeLevel
add command IssueEmergencyPhoneCall rule DangerousSmokeLevel

subscribe feature House1:LivingRoom:SmokeDetector:Measure:smoke_level rule DangerousSmokeLevel

console CREATE EVACUATION ROUTE SUGGESTION RULE
create feature_update_command name BroadcastWindowEvacuationRoute instructions var r = {'targetDeviceScope':'House1', 'targetDeviceStateFqn':'Setting:text_to_speech', 'targetValue':'Exit_House_Immediatly!_If_Door_Is_Blocked_Use_Window!'};r;
create rule_predicate name IsAvaBroadcastingEvacuation test (context[context['notifyingObject'].fqn].is_set_to.indexOf("Evacuate!") !== -1);
create rule_predicate name RoomOnFirstFloor test var targetRoomFqn = context['notifyingObject'].roomFqn;(context[targetRoomFqn].is_on_floor == 1);
create rule_predicate name RoomHasWindow test var targetRoomFqn = context['notifyingObject'].roomFqn;(context[targetRoomFqn].has_window_count > 0);
create rule EvacuationRouteSuggestion
add predicate IsAvaBroadcastingEvacuation rule EvacuationRouteSuggestion
add predicate RoomOnFirstFloor rule EvacuationRouteSuggestion
add predicate RoomHasWindow rule EvacuationRouteSuggestion
add context AllContext rule EvacuationRouteSuggestion
add command BroadcastWindowEvacuationRoute rule EvacuationRouteSuggestion

subscribe feature House1:LivingRoom:Ava:Setting:text_to_speech rule EvacuationRouteSuggestion

console INIT STATE
set appliance House1:LivingRoom:MainLights status Setting:Light_Power value OFF
set appliance House1:LivingRoom:Sconces status Setting:Light_Power value OFF
set appliance House1:LivingRoom:Ava status Setting:text_to_speech value Nothing

console CONFIRM LIGHTS ARE OFF, VOICE RESPONSE IS EMPTY AND EMERGENCY PHONE IS ON HOOK
show appliance House1:LivingRoom:MainLights status Setting:Light_Power
show appliance House1:LivingRoom:Sconces status Setting:Light_Power
show appliance House1:LivingRoom:EmergencyPhone status Setting:call_mode
show appliance House1:LivingRoom:Ava status Setting:text_to_speech

console DETECT HIGH SMOKE LEVEL > 100
set sensor House1:LivingRoom:SmokeDetector status Measure:smoke_level value 101

console CONFIRM LIGHTS ARE ON, VOICE RESPONSE IS EVACUATION NOTICE AND EMERGENCY PHONE IS IN CALL MODE
show appliance House1:LivingRoom:MainLights status Setting:Light_Power
show appliance House1:LivingRoom:Sconces status Setting:Light_Power
show appliance House1:LivingRoom:EmergencyPhone status Setting:call_mode
show appliance House1:LivingRoom:Ava status Setting:text_to_speech



console ===================
console OVEN TIMER EXPIRE
console ===================

console OVEN TIMER EXPIRE RULE
create feature_update_command name NotifyFoodIsReady instructions var r = {'targetDeviceScope':'House1', 'targetDeviceStateFqn':'Setting:text_to_speech', 'targetValue':'Food_Is_Ready!'};r;
create feature_update_command name TurnOvenOff instructions var r = {'targetDeviceScope':'House1:Kitchen:Oven', 'targetDeviceStateFqn':'Setting:target_temp', 'targetValue':'0'};r;
create feature_update_command name StopOvenTimer instructions var r = {'targetDeviceScope':'House1:Kitchen:Oven', 'targetDeviceStateFqn':'Setting:timer_mode', 'targetValue':'STOP'};r;
create rule_predicate name TimerIsAtZero test (context['House1:Kitchen:Oven:Measure:timer_value'].is_detecting == 0);
create rule_predicate name TimerIsInStartMode test (context['House1:Kitchen:Oven:Setting:timer_mode'].is_set_to == 'START');
create rule OvenTimerExpired
add predicate TimerIsAtZero rule OvenTimerExpired
add predicate TimerIsInStartMode rule OvenTimerExpired
add predicate RoomHasWindow rule OvenTimerExpired
add context AllContext rule OvenTimerExpired
add command NotifyFoodIsReady rule OvenTimerExpired
add command TurnOvenOff rule OvenTimerExpired
add command StopOvenTimer rule OvenTimerExpired

subscribe feature House1:Kitchen:Oven:Measure:timer_value rule OvenTimerExpired

console INIT STATE
set appliance House1:LivingRoom:Ava status Setting:text_to_speech value Nothing

console CONFIRM OVEN IS ON (target_temp != 0) NO TEXT TO SPEECH COMMANDS AND
show appliance House1:Kitchen:Oven status Setting:target_temp
show appliance House1:LivingRoom:Ava status Setting:text_to_speech

console DETECT OVEN TIMER VALUE TO 0
set appliance House1:Kitchen:Oven status Measure:timer_value value 0

console CONFIRM OVEN IS OFF (target_temp == 0) AND AVA SENDING VOICE MESSAGE THAT FOOD IS DONE
show appliance House1:Kitchen:Oven status Setting:target_temp
show appliance House1:LivingRoom:Ava status Setting:text_to_speech



console ===================
console BEER COUNT BELOW THRESHOLD!
console ===================

console CREATE RULE FOR BEER SUPPLY LOW
create feature_update_command name RequestForBeer instructions var r = {'targetDeviceScope':'House1', 'targetDeviceStateFqn':'Setting:text_to_speech', 'targetValue':'Beer_Low!_Would_You_Like_To_Order_more!'};r;
create rule_predicate name BeerCountAtThreshold test print(context['House1:Kitchen:Refrigerator:Setting:beer_count_reminder']);(context['House1:Kitchen:Refrigerator:Measure:beer_count'].is_detecting == context['House1:Kitchen:Refrigerator:Setting:beer_count_reminder'].is_set_to);
create rule BeerSupplyLow
add predicate BeerCountAtThreshold rule BeerSupplyLow
add context AllContext rule BeerSupplyLow
add command RequestForBeer rule BeerSupplyLow
subscribe feature House1:Kitchen:Refrigerator:Measure:beer_count rule BeerSupplyLow

console SET BEER COUNT TO 3
set appliance House1:Kitchen:Refrigerator status Measure:beer_count value 3

console CONFIRM VOICE NOTIFICATION ASKING IF WANT TO ORDER MORE BEER
show appliance House1:Kitchen:Refrigerator status Measure:beer_count
show appliance House1:Kitchen:Refrigerator status Setting:need_beer
show appliance House1:Kitchen:AvaKitchen status Setting:text_to_speech

console ASK FOR MORE BEER
subscribe feature House1:Kitchen:AvaKitchen:Measure:voice_command rule GenericVoiceCommand
set appliance House1:Kitchen:AvaKitchen status Measure:voice_command value need_beer_to_YES

console CONFIRM NEED BEER IS NOW YES (which will trigger a beer order from the smart refrigerator)
show appliance House1:Kitchen:Refrigerator status Setting:need_beer
